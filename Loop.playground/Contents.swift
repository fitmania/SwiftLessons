import UIKit

var str = "Hello, LOOPS & CONDITIONALS STATEMENTS!"
//Оператор ветвления (условная инструкция) — оператор, конструкция языка программирования, обеспечивающая выполнение определённой команды (набора команд) только при условии истинности некоторого логического выражения, либо выполнение одной из нескольких команд (наборов команд) в зависимости от значения некоторого выражения.
//image
//Swift предоставляет нам два варианта добавить условные ответвления кода - это при помощи инструкции if и при помощи инструкции switch.
//Синтаксис if
//if условие{
//    инструкция выполнения, если условие истина
//}
//Синтаксис switch
//switch значение для сопоставления {
//     case значение 1:
//          инструкция для значения 1
//     case значение 2, значение 3:
//          инструкция для значения 2 или значения 3
//     default:
//          инструкция, если совпадений с шаблонами не найдено
//}

//Последовательность инструкций, предназначенная для многократного исполнения, называется телом цикла. Единичное выполнение тела цикла называется итерацией. Выражение, определяющее, будет в очередной раз выполняться итерация или цикл завершится, называется условием выхода или условием окончания цикла.
//Swift предоставляет цикл for-in и while.
//Синтаксис for-in - вариант 1
let names = ["Anna", "Alex", "Brian", "Jack"]
for name in names {
    print("Hello, \(name)!")
}
//Синтаксис for-in - вариант 2
for name in 0..<names.count {
    print("Hello, \(names[name])!")
}
//Синтаксис для while
var count = 0
while count<names.count{
    print("Hello, \(names[count])")
    count += 1
}
